



```{r}
library(pacman)
pacman::p_load(dplyr,purrr,tidyr,haven,tibble,ggplot2,gt,ggh4x,lme4)

d <- read_spss("Frequency & Probability Study 1 - 3-24-19.sav")
d |> glimpse()
colnames(d)[1:500]
colnames(d[1000:1840])
head(d,1)

```



| **ORDER VARIABLE FORMAT** |  |  |
| Colorado/Wells Family | COLORADO | 1 = first<br>2 = second<br>Missing = not received |
| Massachusetts/Davis Family | MASSACHUSETTS | (same as COLORADO) |
| California/Adams Family | CALIFORNIA | (same as COLORADO) |
| Texas/Smith Family | TEXAS | (same as COLORADO) |
| Reference class received | REFERENCECLASS | 1=USD<br>2=kWh<br>3=Percentage |
| Was participant's first scenario rounded? | ROUNDING1 | 1=yes<br>0=no |
| Was participant's second scenario rounded? | ROUNDING2 | (same as ROUNDING1) |
| Did the participant receive the rounded scenario first or second? | ROUNDED | 1 = first<br>2 = second |
| Was participant's first scenario a 10% reduction goal? | TENPERCENT1 | 1=yes<br>0=no |
| Was participant's second scenario a 10% reduction goal? | TENPERCENT2 | (same as TENPERCENT1) |
| Did the participant receive the 10% reduction goal first or second? | TENPERCENT | 1 = first<br>2 = second |



```{r}

# for each ResponseId, how many unique ReferenceClass values are there?

d |> 
  group_by(ResponseId) |> 
  summarise(n_distinct(ReferenceClass)) |> head()



d |> 
  group_by(ResponseId, ReferenceClass) |> 
  summarise(n()) 


pmat <- d |> 
  group_by(ResponseId, ReferenceClass, Texas, California,Colorado,Massachusetts) |> 
  summarise(n=n())
  

# head(pmat)
# # A tibble: 6 × 7
# # Groups:   ResponseId, ReferenceClass, Texas, California, Colorado [6]
#   ResponseId        ReferenceClass Texas California Colorado Massachusetts     n
#   <chr>                      <dbl> <dbl>      <dbl>    <dbl>         <dbl> <int>
# 1 R_081G93DbeOgMjjX              1    NA          1        2            NA     1
# 2 R_08qP6LR1m2VzuQp              1    NA          2        1            NA     1
# 3 R_0keShcI9atm6rux              3     2         NA       NA             1     1
# 4 R_10DdSXDfNIuNmFY              3    NA          1       NA             2     1
# 5 R_11c5U65IWfuEeCI              3    NA          1        2            NA     1
# 6 R_12AnbKDp26Lk7NZ              1    NA          2        1            NA     1

# replace NA in pmat with 0
pmat[is.na(pmat)] <- 0
head(pmat)

# head(pmat)
# # A tibble: 6 × 7
# # Groups:   ResponseId, ReferenceClass, Texas, California, Colorado [6]
#   ResponseId        ReferenceClass Texas California Colorado Massachusetts     n
#   <chr>                      <dbl> <dbl>      <dbl>    <dbl>         <dbl> <int>
# 1 R_081G93DbeOgMjjX              1     0          1        2             0     1
# 2 R_08qP6LR1m2VzuQp              1     0          2        1             0     1
# 3 R_0keShcI9atm6rux              3     2          0        0             1     1
# 4 R_10DdSXDfNIuNmFY              3     0          1        0             2     1
# 5 R_11c5U65IWfuEeCI              3     0          1        2             0     1
# 6 R_12AnbKDp26Lk7NZ              1     0          2        1             0     1


# create new column, condit,  A string with ReferenceClass, _, first state name,_, second state name
#   ResponseId        ReferenceClass Texas California Colorado Massachusetts     n condit
#   <chr>                      <dbl> <dbl>      <dbl>    <dbl>         <dbl> <int> <chr> 
# 1 R_081G93DbeOgMjjX              1     0          1        2             0     1 10120 
# e.g., for the first subject, condit = 1_California_Colorado
# The state names with values of 0 are not included in the condit string

pmat <- pmat |> 
  mutate(condit = paste0(ReferenceClass, "_", 
                         ifelse(Texas == 1, "Texas", 
                                ifelse(California == 1, "California", 
                                       ifelse(Colorado == 1, "Colorado", 
                                              ifelse(Massachusetts == 1, "Massachusetts", "NA")
                                       )
                                )
                         ), "_", 
                         ifelse(Texas == 2, "Texas", 
                                ifelse(California == 2, "California", 
                                       ifelse(Colorado == 2, "Colorado", 
                                              ifelse(Massachusetts == 2, "Massachusetts", "NA")
                                       )
                                )
                         )
  )
  )
  

# count number of unique responseID for each condit

pmat |> 
  group_by(condit) |> 
  summarise(n_distinct(ResponseId)) |> head()


# # A tibble: 6 × 2
#   condit                     `n_distinct(ResponseId)`
#   <chr>                                         <int>
# 1 1_California_Colorado                            10
# 2 1_California_Massachusetts                        9
# 3 1_Colorado_California                            12
# 4 1_Colorado_Texas                                 14
# 5 1_Massachusetts_California                       11
# 6 1_Massachusetts_Texas                            11



```
