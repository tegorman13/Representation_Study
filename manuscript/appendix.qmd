
## Energy Literacy Questions

| **ENERGY LITERACY SURVEY** |  |  |
| Dewaters and Powers 2011. Assesses participant<br>knowledge of energy names, use, and sources |  |  |
| The amount of ELECTRICAL ENERGY<br>(ELECTRICITY) we use is measured in units called ... | ELS01 | 1 = "Kilowatt (kW)"<br>2 = "Kilowatt-hours (kWh)"<br>3 = "British Thermal Units (BTU)"<br>4 = "Volts (V)"<br>5 = "Horsepower (HP)" |

| Question | Variable | Values |
|--------------------------|--------------------------|---------------------|
| The amount of ENERGY consumed by an electrical appliance is equal to the power rating of the appliance (watts or kilowatts) ... | ELS02 | 1 = "Multiplied by the cost of electricity"<br>2 = "Added to the cost of electricity"<br>3 = "Multiplied by the time it's used"<br>4 = "Divided by the time it's used"<br>5 = "Added to the time it's used" |
| When you turn on an incandescent light bulb, which of the following energy conversion takes place? | ELS03 | 1 = "Electrical energy to radiant energy (light)"<br>2 = "Chemical energy to radiant energy (light)"<br>3 = "Electrical energy to radiant energy (light) and thermal energy (heat)"<br>4 = "Chemical energy to radiant energy (light) and thermal energy (heat)"<br>5 = "Electrical energy to radiant energy (light) and mechanical energy" |
| The best reason to buy an ENERGY STAR® appliance is ... | ELS04 | 1 = "ENERGY STAR appliances are usually bigger"<br>2 = "ENERGY STAR appliances cost more"<br>3 = "ENERGY STAR appliances use less energy"<br>4 = "ENERGY STAR appliances are more modern looking"<br>5 = "ENERGY STAR appliances cost less" |
| Which uses the MOST ENERGY in the average American home in one year? | ELS05 | 1 = "Refrigerating food and beverages"<br>2 = "Washing and drying clothing"<br>3 = "Heating and cooling rooms"<br>4 = "Heating and cooling water"<br>5 = "Lighting the home" |
| Which of the following items uses the MOST ELECTRICITY in the average home in one year? | ELS06 | 1 = "Lights"<br>2 = "Refrigerator"<br>3 = "Telephone"<br>4 = "Television"<br>5 = "Computer" |
| Which of the following sources provides most of the ELECTRICITY in the United States? | ELS07 | 1 = "Nuclear power"<br>2 = "Burning petroleum"<br>3 = "Burning coal"<br>4 = "Solar energy"<br>5 = "Water (hydro) power" |
| Some people think that if we run out of fossil fuels we can just switch over to electric cars. What is wrong with this idea? | ELS08 | 1 = "Most electricity is currently produced from fossil fuels (coal, oil, natural gas)"<br>2 = "Switching to electric cars will make unemployment rates go up"<br>3 = "It has been proven that it is impossible to build electric cars in great quantities"<br>4 = "You can't use electricity to operate a car"<br>5 = "There is nothing wrong with this idea" |


```{r}
#| cache: false
pacman::p_load(dplyr,purrr,tidyr,stringr,here,tibble,brms,rstan,bayestestR,emmeans,tidybayes,modelsummary,
    ggplot2,gt,knitr,kableExtra,ggh4x,patchwork, ggridges,ggstance,lme4,flextable,pander)

options(digits=2, scipen=999, dplyr.summarise.inform=FALSE)

walk(c("fun_plot"), ~ source(here::here(paste0("scripts/", .x, ".R"))))

theme_set(theme_nice())

s1 <- readRDS(here::here("data/s1_processed.rds")) |> 
  filter(!(id %in% readRDS(here::here("data/s1_discrep_ids.rds")))) |> 
  filter(!(id %in% readRDS(here::here("data/s1_grp_outlier_ids.rds")))) |>
  mutate(refClass = factor(refClass, levels=c("kWh","Percentage","USD")))

s2_long <- readRDS(here::here("data/s2_processed.rds")) |> 
  filter(!(id %in% readRDS(here::here("data/s2_discrep_ids.rds")))) |> 
  filter(!(id %in% readRDS(here::here("data/s2_grp_outlier_ids.rds"))) ) |>
  mutate(refClass = factor(refClass, levels=c("kWh","Percentage","USD")))




s1_agg <- s1 |> 
    filter(appliance !="Total kWh") |> 
    group_by(id,refClass,state,block,plan,edu,pct_goal,calc) |> 
    summarise(total_kWh = sum(value),orig_kWh=sum(family), 
                pct_change = abs(round((orig_kWh-total_kWh)/orig_kWh,3)), 
                n_change = sum(value!=family),
                state_p_dif=mean(state_p_dif),
                state_f_dif=mean(state_f_dif),
                n_less_avg = sum(less_avg),
                duration=first(Duration__in_seconds_)) |> 
    mutate(matched_goal = (pct_change == pct_goal), 
                error = pct_change - pct_goal,
                abs_error = abs(error),
                log_abs_error=log(abs(error)+.007), 
                close_match = abs_error <= 0.02) |>
    ungroup() |> # Add ungroup here
        mutate(
            accuracy_level = factor(
                case_when(
                    abs_error == 0.00 ~ "Exact match",
                    abs_error <= 0.05 ~ "0.01-5% error",
                    TRUE ~ "Over 5% error"  # Capture all remaining cases
                ), 
                levels = c("Exact match", "0.01-5% error", "Over 5% error"),
                ordered = TRUE
            )
        ) |> relocate(accuracy_level, .after= "pct_change")



s1_agg4 <- s1_agg |> group_by(id,refClass,calc) |> 
    mutate(n_accuracy = n_distinct(accuracy_level)) |> 
    summarise(
    mg=sum(matched_goal),
    mgc=sum(close_match),
    n=n(), 
    pct=mg/n,
    pct_close=mgc/n,
    mean_pct_change=mean(pct_change),
    mean_abs_error=mean(abs_error),
    mean_log_abs_error=mean(log_abs_error),
    n_accuracy=first(n_accuracy)) |> 
    mutate(accuracy_level = factor(
            case_when(
                mean_abs_error < 0.02 ~ "Exact match",
                mean_abs_error <= 0.05 ~ "0.01-5% error",
                TRUE ~ "Over 5% error"  # Capture all remaining cases
            ), 
            levels = c("Exact match", ".01-5% error", "Over 5% error"),
            ordered = TRUE
        ))

s2_agg <- s2_long |> 
  filter(appliance != "TOTAL") |> 
  group_by(id,refClass,calc, state,pct,pct_goal,plan,rounded) |> 
  summarise(
    total_kWh = sum(value),
    orig_kWh = sum(family),
    pct_change = round((orig_kWh - total_kWh) / orig_kWh, 3),
    state_dif = mean(state_dif),
    .groups = "drop"
  ) |>
  mutate(
    matched_goal = (pct_change == pct),
    close_match = abs(pct_change - pct) <= 0.02,
                error = pct_change - pct,
                abs_error = abs(error),
                log_abs_error=log(abs(error)+.007)) |> 
      ungroup() |> 
        mutate(
            accuracy_level = factor(
                case_when(
                    abs_error == 0.00 ~ "Exact match",
                    abs_error <= 0.05 ~ "0.01-5% error",
                    TRUE ~ "Over 5% error"  # Capture all remaining cases
                ), 
                levels = c("Exact match","0.01-5% error", "Over 5% error"),
                ordered = TRUE
            )
        )

s2_agg4 <- s2_agg |> group_by(id,refClass,calc) |> 
    mutate(n_accuracy = n_distinct(accuracy_level)) |> 
    summarise(
    mg=sum(matched_goal),
    mgc=sum(close_match),
    n=n(), 
    pct=mg/n,
    pct_close=mgc/n,
    mean_pct_change=mean(pct_change),
    mean_abs_error=mean(abs_error),
    mean_log_abs_error=mean(log_abs_error),
    n_accuracy=first(n_accuracy)) |> 
    mutate(accuracy_level = factor(
            case_when(
                mean_abs_error < 0.02 ~ "Exact match",
                mean_abs_error <= 0.05 ~ ".01-5% error",
                TRUE ~ "Over 5% error"  # Capture all remaining cases
            ), 
            levels = c("Exact match", "01-5% error", "Over 5% error"),
            ordered = TRUE
        ))
  

```



# A tibble: 4,560 × 17
# Groups:   id, block [380]
   id     block refClass appliance pct_goal rounded state    calc       edu                         els   pct family state_avg plan  value change state_dif
   <chr>  <dbl> <fct>    <chr>     <chr>    <chr>   <chr>    <chr>      <fct>                     <dbl> <dbl>  <dbl>     <dbl> <fct> <dbl>  <dbl>     <dbl>
 1 s2_100     1 kWh      AC        10%      Rounded Colorado Calculator Highschool diploma or GED 0.875   0.1   1000       498 plan1   500   -500         2
 2 s2_100     1 kWh      AC        10%      Rounded Colorado Calculator Highschool diploma or GED 0.875   0.1   1000       498 plan2   300   -700      -198
 3 s2_100     1 kWh      HEAT      10%      Rounded Colorado Calculator Highschool diploma or GED 0.875   0.1  18000     16411 plan1 15000  -3000     -1411
 4 s2_100     1 kWh      HEAT      10%      Rounded Colorado Calculator Highschool diploma or GED 0.875   0.1  18000     16411 plan2 12000  -6000     -4411
 5 s2_100     1 kWh      WATER     10%      Rounded Colorado Calculator Highschool diploma or GED 0.875   0.1  12000      5832 plan1  6000  -6000       168
 6 s2_100     1 kWh      WATER     10%      Rounded Colorado Calculator Highschool diploma or GED 0.875   0.1  12000      5832 plan2  2000 -10000     -3832
 7 s2_100     1 kWh      REFRIG    10%      Rounded Colorado Calculator Highschool diploma or GED 0.875   0.1   1000      1142 plan1  2000   1000       858
 8 s2_100     1 kWh      REFRIG    10%      Rounded Colorado Calculator Highschool diploma or GED 0.875   0.1   1000      1142 plan2   500   -500      -642



```{r}

# widen by appliance, with separate row for value, family, and stage_avg

s2 <- s2_long #|> select(-family,-state_avg,-edu,-change,-state_dif) |> pivot_wider(names_from = appliance, values_from = c(value)) 
s2s <- s2_long |> select(-family,-state_avg,-edu,-change,-value) |> pivot_wider(names_from = appliance, values_from = c(state_dif)) |> select(id,block,refClass,pct,plan,AC:OTHER)
# s2s
#    id     block refClass     pct plan     AC   HEAT WATER REFRIG OTHER
#    <chr>  <dbl> <fct>      <dbl> <fct> <dbl>  <dbl> <dbl>  <dbl> <dbl>
#  1 s2_100     1 kWh         0.1  plan1     2  -1411   168    858   348
#  2 s2_100     1 kWh         0.1  plan2  -198  -4411 -3832   -642 -6152
#  3 s2_100     2 kWh         0.15 plan1  1324     19  -139    320  -424
#  4 s2_100     2 kWh         0.15 plan2   324   -981 -1139   -318 -1424
#  5 s2_101     1 kWh         0.1  plan1   102   -411  2168   -142   398
#  6 s2_101     1 kWh         0.1  plan2   502  -1411   168   -142  1348
#  7 s2_101     2 kWh         0.15 plan1   751    901  -396    682 -1883
#  8 s2_101     2 kWh         0.15 plan2  2251    401   104    682 -1383
#  9 s2_102     1 Percentage  0.1  plan1   958 -12954 -5354    200 -5417
# 10 s2_102     1 Percentage  0.1  plan2   890 -15435 -4956   8544  3225


# clustering planning strategies - kmeans 

    ‘
s2s |>  ungroup() |> select(-id,-block,-refClass,-pct,-plan) |> scale(center = TRUE, scale = TRUE) |> kmeans(centers = 3) 
s2s_clust <- s2s |>  ungroup() |> select(-id,-block,-refClass,-pct,-plan) |> scale(center = TRUE, scale = TRUE) |> kmeans(centers = 3) %>% .$cluster |> as.factor() 
s2s <- cbind(s2s,c=s2s_clust)

s2s |>    group_by(c) |>
  summarise(ac=mean(AC),heat=mean(HEAT),water=mean(WATER),refrig=mean(REFRIG),other=mean(OTHER)) |>
  pivot_longer(cols = c(ac:other), names_to = "Appliance", values_to = "Mean") |>
  ggplot(aes(x=Appliance,y=Mean,col=c)) + 
  geom_point() + 
  facet_wrap(~c) +
  theme_minimal() 



s2s <- s2_long |> select(-family,-state_avg,-edu,-change,-state_dif) |> pivot_wider(names_from = appliance, values_from = c(value))  |> select(id,block,refClass,pct,plan,AC:OTHER)


s2s |>  ungroup() |> select(-id,-block,-refClass,-pct,-plan) |> scale(center = TRUE, scale = TRUE) |> kmeans(centers = 3) 

s2s_clust <- s2s |>  ungroup() |> select(-id,-block,-refClass,-pct,-plan) |> scale(center = TRUE, scale = TRUE) |> kmeans(centers = 3) %>% .$cluster |> as.factor() 

s2s <- cbind(s2s,c=s2s_clust) |> left_join(s2, join_by(id,refClass,block,plan,pct))
s2s |>  group_by(c) |>
  summarise(ac=mean(AC),heat=mean(HEAT),water=mean(WATER),refrig=mean(REFRIG),other=mean(OTHER)) |>
  pivot_longer(cols = c(ac:other), names_to = "Appliance", values_to = "Mean") |>
  ggplot(aes(x=Appliance,y=Mean,col=c)) + 
  geom_point() + 
  geom_point(aes(y=state_avg),color="black") +
  facet_wrap(~c) +
  theme_minimal() 

s2 |> group_by(appliance,family,state,state_avg) |> select(appliance,family_prior_yr=family,state,state_avg)
```



## Study 1



### Amount of change


```{r}

# plot mean_pct_change distribution
s1_agg4 |> ggplot(aes(x = refClass, y = mean_pct_change, fill = refClass)) +
    geom_boxplot() +
    labs(title = "S1. Mean % Change by Reference Class",
        x = "Reference Class",
        y = "Mean % Change",
        fill = "Reference Class") +
    theme_minimal()

# plot mean_pct_change density
s1_agg4 |> ggplot(aes(x = mean_pct_change, fill = refClass)) +
    geom_density(alpha = 0.5) +
    labs(title = "S1. Mean % Change Density by Reference Class",
        x = "Mean % Change",
        fill = "Reference Class") +
    theme_minimal()

```




## Study2



```{r}
ordinal_model_s2_logit <- brm(
  accuracy_level ~ refClass + calc+pct_goal+rounded + (1|id)+ (1|state),
  data = s2_agg,
  family = cumulative("logit"),
  cores = 4,
  iter = 3000,
  control = list(adapt_delta = 0.99), # Recommended for ordinal models
  prior = c(prior(normal(0, 2), class = "Intercept"),  # Priors for thresholds
            prior(normal(0, 2), class = "b")), # Priors for predictors
  file = paste0(here::here("data/model_cache",'s2_acc3_add.rds')) # Cache for efficiency
)
```


# diagnostics
```{r}
plot(ordinal_model_s2_logit, condition = "refClass")
```


### Tables

```{r}
#| label: tbl-s2-prop
#| tbl-cap: "Study 2: The table shows the percentage of participants who fell into each accuracy level for each reference class condition (percentages of kWh, $, and USD columns reflect within condition percentages). The combined group column reflects the percentage of participants in each accuracy level when aggregating across across all reference class conditions."



# observed_props_s2 <- s2_agg |>
#   group_by(id,refClass, accuracy_level,calc) |>
#   summarise(n = n()) |>
#   group_by(refClass) |>
#   mutate(prop = n/sum(n)) |>
#   group_by(refClass,accuracy_level) |>
#   summarise(n = sum(n), prop = sum(prop)) |>
#   mutate(n_prop=paste0(n," (",round(prop*100,1),"%)" ), pct_grp=paste0(round(prop*100,1), "%")) |> ungroup()
# 



# compute percentage of subjects per accuracy level per group
observed_props_s2 <- s2_agg |>
  group_by(refClass, accuracy_level) |>
  summarise(n = n()) |>
  group_by(refClass) |>
  mutate(prop = n/sum(n)) |>
  mutate(n_prop=paste0(n," (",round(prop*100,1),"%)" ), pct_grp=paste0(round(prop*100,1), "%")) |> ungroup()

observed_props_s2 |> 
  mutate(n_total=sum(n)/3) |> 
  group_by(accuracy_level) |>
  mutate(ns=sum(n)/4) |> 
  mutate(Total = paste0(round(ns/n_total*100,1), "%")) |>
  select('Reference Class'=refClass, 'Accuracy Level'=accuracy_level, '% in Group'=pct_grp, "Combined Groups %" =Total) |>
  pivot_wider(
    names_from = 'Reference Class',
    values_from = c('% in Group')
  ) |> relocate("Combined Groups %" , .after=last_col()) |> 
  kable(escape=FALSE,booktabs=TRUE,align=c("l")) 

```


```{r}
#| label: tbl-s2-prop
#| tbl-cap: "Study 2: The table shows the percentage of participants who fell into each accuracy level for each reference class condition (percentages of kWh, $, and USD columns reflect within condition percentages). The combined group column reflects the percentage of participants in each accuracy level when aggregating across across all reference class conditions."


# compute percentage of subjects per accuracy level per group
observed_props_s2 <- s2_agg |>
  group_by(refClass, accuracy_level) |>
  summarise(n = n()) |>
  group_by(refClass) |>
  mutate(prop = n/sum(n)) |>
  mutate(n_prop=paste0(n," (",round(prop*100,1),"%)" ), pct_grp=paste0(round(prop*100,1), "%")) |> ungroup()

observed_props_s2 |> 
  mutate(n_total=sum(n)/3) |> 
  group_by(accuracy_level) |>
  mutate(ns=sum(n)/4) |> 
  mutate(Total = paste0(round(ns/n_total*100,1), "%")) |>
  select('Reference Class'=refClass, 'Accuracy Level'=accuracy_level, '% in Group'=pct_grp, "Combined Groups %" =Total) |>
  pivot_wider(
    names_from = 'Reference Class',
    values_from = c('% in Group')
  ) |> relocate("Combined Groups %" , .after=last_col()) |> 
  kable(escape=FALSE,booktabs=TRUE,align=c("l")) 

```

@tbl-s2-prop shows that, once again, participants in the kWh condition achieved closer alignment with the target goals (44% exact matches), followed by Percentage (27%) and USD (18%). These percentages are consistent with the patterns observed in Study 1, reinforcing the conclusion that providing goals in kWh supports better accuracy.



```{r}
#| label: fig-s1-plot
#| fig-cap: "Study 1: Proportion of participants in each accuracy level, colored by reference class. A larger % of participants in the Exact Match bin indicates better performance."

# prop_acc_s1 <- s1_agg %>%
#     group_by(refClass, accuracy_level) %>%
#     summarise(count = n()) %>%
#     group_by(accuracy_level) |>
#     mutate(Probability = count / sum(count)) %>%
#     ungroup()


# ggplot(prop_acc_s1, aes(x = accuracy_level, y = Probability, fill = refClass)) +
#     geom_bar(stat = "identity", position = position_dodge()) +
#   scale_y_continuous(labels = scales::percent) +
#     labs(title = "S1. % of Participants within each Accuracy Bin",
#         x = "Accuracy Level",
#         y = "Percentage of Participants",
#         fill = "Reference Class") +
#     theme_minimal() 

ggplot(data = s1_agg, aes(x = refClass, fill = accuracy_level)) +
  geom_bar(position = "dodge", aes(y = (..count..)/sum(..count..))) +
  scale_y_continuous(labels = scales::percent) +
  labs(title = "Accuracy Levels by Reference Class",
       x = "Reference Class Condition",
       y = "Percentage of Participants",
       fill = "Accuracy Level") +
  theme_minimal()

```


```{r}
#| label: fig-s2-plot2
#| fig-cap: "Experiment 2. Proportion of participants in each accuracy level, colored by reference class, and seprated in facets based on the levels of reduction goal, and rounding.  A larger % of participants in the Exact Match, or 0.01-2% error bins indicates better performance."
#| fig.width: 11
#| fig.height: 9

ggplot(data = s2_agg, aes(x = refClass, fill = accuracy_level)) +
  geom_bar(position = "dodge", aes(y = (..count..)/sum(..count..))) +
  scale_y_continuous(labels = scales::percent) +
  facet_wrap(~rounded+pct_goal) +
  labs(title = "Accuracy Levels by Reference Class",
       x = "Reference Class Condition",
       y = "Percentage of Participants",
       fill = "Accuracy Level") +
  theme_minimal()

```






```{r}
#| label: fig-s2-plot
#| tbl-cap: "Study 2: Proportion of participants in each accuracy level, colored by reference class. A larger % of participants in the Exact Match, or 0.01-2% error bins indicates better performance."


# % of entire sample 
prop_combo_s2 <- s2_agg %>%
    group_by(refClass, accuracy_level,pct_goal) %>%
    summarise(count = n()) %>%
    group_by(refClass) %>%
    mutate(Probability = count / sum(count)) %>%
    ungroup()


ggplot(prop_combo_s2, aes(x = accuracy_level, y = Probability, fill = refClass)) +
    geom_bar(stat = "identity", position = position_dodge()) +
  scale_y_continuous(labels = scales::percent) +
    labs(title = "S1. % of Participants within each Accuracy Bin",
        x = "Accuracy Level",
        y = "Percentage of Participants",
        fill = "Reference Class") +
    theme_minimal() 


# ggplot(data = s2_agg, aes(x = refClass, fill = accuracy_level)) +
#   geom_bar(position = "dodge", aes(y = (..count..)/sum(..count..))) +
#   scale_y_continuous(labels = scales::percent) +
#   labs(title = "Accuracy Levels by Reference Class",
#        x = "Reference Class Condition",
#        y = "Percentage of Participants",
#        fill = "Accuracy Level") +
#   theme_minimal()


```




### Model Tables

```{r}


marginaleffects_by_pct <- avg_slopes(
      ordinal_model_s2_logit,
      variables = "refClass",
      by = c("pct_goal", "accuracy_level")
    )
    print(marginaleffects_by_pct)
    
 #         Group     Term         Contrast pct_goal  Estimate    2.5 %  97.5 %
 # Exact match   refClass Percentage - kWh      10% -0.073089 -0.19345  0.0421
 # Exact match   refClass USD - kWh             10% -0.150377 -0.26763 -0.0324
 # 0.01-5% error refClass Percentage - kWh      10%  0.000166 -0.01468  0.0223
 # 0.01-5% error refClass USD - kWh             10% -0.018067 -0.05721  0.0100
 # Over 5% error refClass Percentage - kWh      10%  0.073590 -0.04623  0.1885
 # Over 5% error refClass USD - kWh             10%  0.171389  0.03806  0.2953
 # Exact match   refClass Percentage - kWh      15% -0.076254 -0.19838  0.0448
 # Exact match   refClass USD - kWh             15% -0.158520 -0.28022 -0.0346
 # 0.01-5% error refClass Percentage - kWh      15%  0.003111 -0.00833  0.0299
 # 0.01-5% error refClass USD - kWh             15% -0.007757 -0.04633  0.0197
 # Over 5% error refClass Percentage - kWh      15%  0.071884 -0.04499  0.1843
 # Over 5% error refClass USD - kWh             15%  0.168805  0.03638  0.2940
    
    
avg_predictions(ordinal_model_s2_logit, newdata = datagrid(id=unique,refClass=unique),by="refClass")

 #         Group   refClass Estimate 2.5 % 97.5 %
 # Exact match   kWh           0.420 0.336  0.513
 # Exact match   Percentage    0.340 0.266  0.427
 # Exact match   USD           0.254 0.179  0.347
 # 0.01-5% error kWh           0.209 0.173  0.244
 # 0.01-5% error Percentage    0.213 0.182  0.247
 # 0.01-5% error USD           0.199 0.160  0.233
 # Over 5% error kWh           0.368 0.291  0.457
 # Over 5% error Percentage    0.444 0.360  0.532
 # Over 5% error USD           0.544 0.446  0.648    
 #    

ame2 <- avg_slopes(
  ordinal_model_s2_logit, 
  variables = "refClass"
)
ame2 |>  kable(escape=FALSE,booktabs=TRUE,align=c("l"))

 #         Group         Contrast  Estimate   2.5 %   97.5 %
 # Exact match   Percentage - kWh -0.072820 -0.1920  0.04245
 # Exact match   USD - kWh        -0.150425 -0.2668 -0.03252
 # 0.01-5% error Percentage - kWh  0.000449 -0.0127  0.02116
 # 0.01-5% error USD - kWh        -0.015279 -0.0524  0.00957
 # Over 5% error Percentage - kWh  0.072572 -0.0453  0.18601
 # Over 5% error USD - kWh         0.168592  0.0373  0.29260
```


```{r}

me <- conditional_effects(ordinal_model_s2_logit, effects = "refClass",categorical=TRUE)
plot(me, points = TRUE)
```



### Goal Manipulation



```{r}




ggplot(s2_agg1, aes(y = pct_goal, x = log_abs_error, color = calc)) +
  geom_density_ridges(aes(fill = calc), alpha = 0.2, scale = 0.5,
                      jittered_points = TRUE, point_alpha = 0.7,point_size=.4,
                      position = position_raincloud(width = 0.05, height = 0.1,
                                                    ygap = 0.05)) +
  geom_boxploth(width = 0.05, alpha = 0.2, outlier.shape = NA, show.legend = FALSE) +
  #scale_y_discrete(expand = expansion(mult = c(0.2, 0.4))) +
 # guides(fill = "none", color = guide_legend(reverse = TRUE)) +
  guides(fill = "none") +
  labs(x = "Log Absolute Deviation", y = "Reference Class", color = "") +
  theme(legend.position = "top")




ggplot(prop_combo_s2, aes(x = accuracy_level, y = Probability, fill = pct_goal)) +
    geom_bar(stat = "identity", position = position_dodge()) +
  scale_y_continuous(labels = scales::percent) +
    labs(title = "S1. % of Participants within each Accuracy Bin",
        x = "Accuracy Level",
        y = "Percentage of Participants",
        fill = "Reference Class") +
    theme_minimal() 

ggplot(data = s2_agg1, aes(x = accuracy_level, fill = pct_goal)) +
  geom_bar(position = "dodge", aes(y = (..count..)/sum(..count..))) +
  scale_y_continuous(labels = scales::percent) +
  labs(title = "Accuracy Levels by Reference Class",
       x = "Accuracy Level",
       y = "Percentage of Participants",
       fill = "Reference Class") +
  theme_minimal()

ggplot(data = s2_agg1, aes(x = accuracy_level, fill = pct_goal)) +
geom_bar(position = "dodge", aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(labels = scales::percent) +
facet_wrap(~refClass) +
labs(title = "Accuracy Levels by Reference Class",
      x = "Accuracy Level",
      y = "Percentage of Participants",
      fill = "Reference Class") +
theme_minimal()


```


### Rounding



```{r}

ggplot(s2_agg1, aes(y = refClass, x = log_abs_error, color = rounded)) +
  geom_density_ridges(aes(fill = rounded), alpha = 0.2, scale = 0.5,
                      jittered_points = TRUE, point_alpha = 0.7,point_size=.4,
                      position = position_raincloud(width = 0.05, height = 0.1,
                                                    ygap = 0.05)) +
  geom_boxploth(width = 0.05, alpha = 0.2, outlier.shape = NA, show.legend = FALSE) +
  #scale_y_discrete(expand = expansion(mult = c(0.2, 0.4))) +
 # guides(fill = "none", color = guide_legend(reverse = TRUE)) +
  guides(fill = "none") +
  labs(x = "Log Absolute Deviation", y = "Reference Class", color = "") +
  theme(legend.position = "top")


ggplot(data = s2_agg1, aes(x = accuracy_level, fill = rounded)) +
geom_bar(position = "dodge", aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(labels = scales::percent) +
facet_wrap(~refClass) +
labs(title = "Accuracy Levels by Reference Class",
      x = "Accuracy Level",
      y = "Percentage of Participants",
      fill = "Reference Class") +
theme_minimal()

```



### Individual Differences

As in Experiment 1, we further investigated the role of individual differences in energy literacy in predicting planning accuracy. A Bayesian linear regression model, analogous to the one used in Experiment 1 (log_abs_error ~ els + (1|id) + (1|state)), revealed a significant negative relationship between energy literacy scores and log-transformed absolute error (Estimate = -3.21, 95% CI: -3.89 to -2.52). This finding indicates that participants with higher energy literacy scores tended to produce more accurate plans, exhibiting smaller deviations from the target reduction goals. The conditional effect plot (@fig-s2-els) visually confirms this relationship, showing a clear decreasing trend in log absolute error as energy literacy increases.

```{r}
#| label: fig-s2-indv
#| fig-cap: "Study 2: Individual performance in the energy planning task, colored by reference class. The dashed line represents the target reduction goal. Participants are shown along the y axis, those who fall above or below the dashed line have not met the target goal.  The x-axis represents the percent change in energy usage from the prior year."
#| fig-width: 11
#| fig-height: 9

s2_agg |> group_by(id,refClass,calc,pct_goal,pct_change) |> 
    filter(plan=="plan1",rounded=="Rounded") |> 
    mutate(n_accuracy = n_distinct(accuracy_level)) |> 
    summarise(mg=sum(matched_goal),n=n(), pct=mg/n,mean_pct_change=mean(pct_change),mean_abs_error=mean(abs_error),n_accuracy=first(n_accuracy)) |>
  ungroup() |> 
  mutate(goal_pct = as.numeric(stringr::str_remove(pct_goal,"%"))/100) |>
  filter(mean_abs_error <= 0.50) |>
  mutate(id=reorder(id,pct_change)) |> 
  ggplot(aes(y=id,x=mean_pct_change,col=refClass)) + 
  geom_point(size=1,alpha=0.6,position = position_jitter(w=0, h=0.17)) +
  geom_vline(aes(xintercept=goal_pct),linetype="dashed",alpha=.5) +
  ggh4x::facet_nested_wrap(~pct_goal,axes="all",scales="free",ncol=2)  + 
  labs(y="Participant Id", x="Percent Change", title="Individual Performance") +
  theme(axis.text.y=element_text(face = "plain", size = rel(0.7))) + 
    scale_x_continuous(breaks = seq(0, 0.5, by = 0.05),
                    labels = scales::percent_format(accuracy = 1))



```

```{r}
#| label: fig-s2-indv2
#| fig-cap: "Study 2: Respones patterns for a subset of individiual participants. Black points are participant responses, red points are the state average, and blue points are the family average. The x-axis represents the appliance category, and the y-axis represents the energy usage in kWh."
#| fig.width: 11
#| fig.height: 10

s2_long |> filter(id %in% unique(s2_long$id)[1:30]) |> 
  filter(appliance!="TOTAL",state=="California") |> 
  ggplot(aes(x=appliance,y=value)) + geom_point(aes(shape=plan)) +
  geom_point(aes(y=state_avg),color="red") +
  geom_point(aes(y=family),color="blue") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))


s2_long |> filter(id %in% unique(s2_long$id)[1:30]) |> 
  filter(appliance!="TOTAL",state=="California") |> 
  ggplot(aes(x=appliance,y=value)) + geom_point(aes(shape=plan)) +
  geom_point(aes(y=state_avg),color="red") +
  geom_point(aes(y=family),color="blue") +
  facet_wrap(~id) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
```



### Tables




### Distance plots
```{r}
#| label: tbl-s2-agg
#| tbl-cap: "Study 2: Summary of planning accuracy by reference class. The table shows performance as both the % of trials where participants matched the goal, and the mean absolute error from the target reduction goal."


s2_agg1 |> group_by(id,refClass,calc) |> 
    mutate(n_accuracy = n_distinct(accuracy_level)) |> 
    summarise(mg=sum(matched_goal),n=n(), pct=mg/n,mean_pct_change=mean(pct_change),
    mean_abs_error=mean(abs_error),mean_log_abs_error=mean(log_abs_error),
    n_accuracy=first(n_accuracy)) 

s2_agg4 %>% ggplot(aes(x=refClass,y=mean_log_abs_error,fill=refClass)) + 
  stat_summary(fun=mean, geom="bar") +
  stat_summary(fun.data=mean_cl_normal, geom="errorbar", width=0.2) +
  geom_jitter(alpha = 0.2, width = 0.2, height = 0) 
            

s2_agg4 |> 
  ggplot(aes(x = mean_log_abs_error,fill = refClass)) +
  geom_density(alpha = 0.7) 



```



Additional data collected included:

-   **Energy Literacy Quiz**: An 8-item questionnaire assessing participants' knowledge of energy consumption and conversion [ @dewatersEnergyLiteracySecondary2011].
-   **Calculator Usage Tracking**: Questions determined whether participants used a calculator, paper/pen, or other methods to complete the tasks.
-   **Demographic Survey**: Collected information on gender, age, income, education, employment status, and state of residence.
-   **Environmental Attitudes Survey**: Assessed participants' pro-environmental attitudes and perceived importance of energy conservation.
